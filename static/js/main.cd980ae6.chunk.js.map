{"version":3,"sources":["icons/dump.svg","icons/flag.svg","icons/flag-fill.svg","TodoItem.tsx","ToDo.tsx","About.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["TodoItem","index","item","onCheck","onMark","draggableId","id","provided","className","ref","innerRef","draggableProps","dragHandleProps","name","src","priority","flagFill","flag","alt","width","onClick","logo","ToDo","useState","input","setInput","items","setItems","idCounter","setIdCounter","addItem","trim","prevData","counter","removeItem","filter","markAsImportant","map","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","onDragEnd","result","destination","source","droppableId","newItems","Array","from","splice","type","value","onKeyPress","event","key","onChange","target","droppableProps","placeholder","length","About","Wrapper","styled","div","App","to","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd980ae6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dump.bb8494aa.svg\";","export default __webpack_public_path__ + \"static/media/flag.f3a1fab1.svg\";","export default __webpack_public_path__ + \"static/media/flag-fill.3ed1e3dd.svg\";","import React from 'react';\nimport logo from './icons/dump.svg';\nimport flag from './icons/flag.svg';\nimport flagFill from './icons/flag-fill.svg';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './ToDoItem.css';\nimport { item } from './ToDo';\n\ntype functionProps = {\n    index: number;\n    item: item;\n    onCheck(id: string): void;\n    onMark(id: string): void;\n};\n\nfunction TodoItem({ index, item, onCheck, onMark }: functionProps) {\n    return (\n        <>\n            <Draggable draggableId={item.id} index={index}>\n                {provided => (\n                    <div className='item' ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                        {item.name}\n                        <div className='actions-group'>\n                            <img\n                                src={item.priority ? flagFill : flag}\n                                alt='flag'\n                                width='25px'\n                                onClick={() => {\n                                    onMark(item.id);\n                                }}\n                            />\n                            <img\n                                src={logo}\n                                alt='trash bin'\n                                width='25px'\n                                onClick={() => {\n                                    onCheck(item.id);\n                                }}\n                            />\n                        </div>\n                    </div>\n                )}\n            </Draggable>\n        </>\n    );\n}\n\nexport default TodoItem;\n","import React, { useState, useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport './App.css';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\n\nexport type item = {\n    name: string;\n    priority: boolean;\n    id: string;\n};\n\nfunction ToDo() {\n    const [input, setInput] = useState('');\n    const [items, setItems] = useState<Array<item>>([]);\n    const [idCounter, setIdCounter] = useState(1);\n\n    function addItem() {\n        if (input.trim()) {\n            setItems(prevData => {\n                return [...prevData, { name: input, priority: false, id: '' + idCounter }];\n            });\n            setIdCounter(counter => ++counter);\n            setInput('');\n        }\n    }\n\n    function removeItem(id: string) {\n        setItems(prevData => {\n            return prevData.filter(item => {\n                return item.id !== id;\n            });\n        });\n    }\n\n    function markAsImportant(id: string) {\n        setItems(prevData => prevData.map(item => (item.id === id ? { ...item, priority: !item.priority } : item)));\n    }\n\n    useEffect(() => {\n        const items = JSON.parse(localStorage.getItem('items') || '');\n        if (items) {\n            setItems(items);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('items', JSON.stringify(items));\n    }, [items]);\n\n    useEffect(() => {\n        const idCounter = JSON.parse(localStorage.getItem('idCounter') || '');\n        if (idCounter) {\n            setIdCounter(idCounter);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('idCounter', JSON.stringify(idCounter));\n    }, [idCounter]);\n\n    function onKeyPressHandler(event: React.KeyboardEvent) {\n        if (event.key === 'Enter') {\n            addItem();\n        }\n    }\n\n    function onDragEnd(result: DropResult) {\n        const { destination, source } = result;\n\n        if (!destination) {\n            return;\n        }\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\n            return;\n        }\n\n        const newItems = Array.from(items);\n        const item = newItems.splice(source.index, 1);\n        newItems.splice(destination.index, 0, ...item);\n        setItems(newItems);\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className='todolist'>\n                <div className='heading'>\n                    <h1 className='title'>Планер</h1>\n                </div>\n                <input\n                    type='text'\n                    value={input}\n                    onKeyPress={onKeyPressHandler}\n                    onChange={event => {\n                        setInput(event.target.value);\n                    }}\n                />\n                <button onClick={addItem}>Добавить</button>\n                <Droppable droppableId='text'>\n                    {provided => (\n                        <div className='items' ref={provided.innerRef} {...provided.droppableProps}>\n                            {items.map((item, index) => (\n                                <TodoItem key={item.id} index={index} item={item} onCheck={removeItem} onMark={markAsImportant} />\n                            ))}\n                            {provided.placeholder}\n                            {items.length === 0 && <span>Нет задач</span>}\n                        </div>\n                    )}\n                </Droppable>\n            </div>\n        </DragDropContext>\n    );\n}\n\nexport default ToDo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction About() {\n    const Wrapper = styled.div`\n        margin: 50px auto;\n        padding: 16px;\n        min-height: 580px;\n        max-width: 580px;\n        background-color: #f1f5f8;\n        padding-left: 30px;\n        padding-right: 30px;\n        line-height: 1.3;\n        li {\n            list-style-type: none;\n            line-height: 1.5;\n        }\n        h1 {\n            font-weight: 300;\n        }\n    `;\n\n    return (\n        <Wrapper>\n            <h1> Учебный проект для демонстрации навыков работы с 💙 React 💙 </h1>\n            <ul>\n                <li>Добавление задач с помощью нажатия Enter или кнопки</li>\n                <li> Удаление задач</li>\n                <li> Роутинг</li>\n                <li> Помечание важных задач </li>\n                <li> Drag and drop </li>\n            </ul>\n            <h1>Спецификации</h1>\n            <ul>\n                <li> React 17</li>\n                <li> TypeScript</li>\n                <li> ESLint </li>\n                <li>Prettier</li>\n                <li>Styled-Components</li>\n            </ul>\n        </Wrapper>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport ToDo from './ToDo';\nimport About from './About';\nimport { Switch, Route, NavLink, HashRouter } from 'react-router-dom';\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className='App'>\n                <ul className='header'>\n                    <li>\n                        <NavLink to='/'>Планер</NavLink>{' '}\n                    </li>\n                    <li>\n                        <NavLink to='/about'>О проекте</NavLink>\n                    </li>\n                </ul>\n                <Switch>\n                    <Route path='/' exact component={ToDo} />\n                    <Route path='/about' component={About} />\n                </Switch>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}